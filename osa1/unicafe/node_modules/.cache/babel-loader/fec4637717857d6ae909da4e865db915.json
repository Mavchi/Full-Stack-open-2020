{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aleksi/Full-Stack-open-2020/osa1/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Stats = ({\n  good,\n  neutral,\n  bad\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"good \", good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }, this), \"neutral \", neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this), \"bad \", bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 15\n  }, this), \"all \", good + neutral + bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 28\n  }, this), \"average \", (good * 1 + bad * -1) / (good + neutral + bad), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 54\n  }, this), \"positive \", good / (good + neutral + bad)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c2 = Stats;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addGood = () => setGood(good + 1);\n\n  const addNeutral = () => setNeutral(neutral + 1);\n\n  const addBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addGood(),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addNeutral(),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addBad(),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 18\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Stats\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/aleksi/Full-Stack-open-2020/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","Stats","good","neutral","bad","App","setGood","setNeutral","setBad","addGood","addNeutral","addBad","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACb;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA,YACGC;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,M;;AAMN,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,kBACZ;AAAA,sBACQF,IADR,oBACc;AAAA;AAAA;AAAA;AAAA,UADd,cAEWC,OAFX,oBAEoB;AAAA;AAAA;AAAA;AAAA,UAFpB,UAGOC,GAHP,oBAGY;AAAA;AAAA;AAAA;AAAA,UAHZ,UAIOF,IAAI,GAACC,OAAL,GAAaC,GAJpB,oBAIyB;AAAA;AAAA;AAAA;AAAA,UAJzB,cAKW,CAAEF,IAAI,GAAC,CAAN,GAAUE,GAAG,GAAC,CAAC,CAAhB,KAAqBF,IAAI,GAACC,OAAL,GAAaC,GAAlC,CALX,oBAKmD;AAAA;AAAA;AAAA;AAAA,UALnD,eAMYF,IAAI,IAAGA,IAAI,GAACC,OAAL,GAAaC,GAAhB,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMH,K;;AAWN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUI,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMI,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,OAAO,GAAG,MAAMH,OAAO,CAACJ,IAAI,GAAC,CAAN,CAA7B;;AACA,QAAMQ,UAAU,GAAG,MAAMH,UAAU,CAACJ,OAAO,GAAC,CAAT,CAAnC;;AACA,QAAMQ,MAAM,GAAG,MAAMH,MAAM,CAACJ,GAAG,GAAC,CAAL,CAA3B;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMK,OAAO,EAA9B;AAAkC,MAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,EAAjC;AAAqC,MAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMC,MAAM,EAA7B;AAAiC,MAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,IAAb;AAAmB,MAAA,OAAO,EAAEC,OAA5B;AAAqC,MAAA,GAAG,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApBD;;GAAMC,G;;MAAAA,G;AAsBNR,QAAQ,CAACe,MAAT,eAAiB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAjB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Stats = ({ good, neutral, bad }) => (\n  <div>\n    good {good} <br />\n    neutral {neutral} <br />\n    bad {bad} <br />\n    all {good+neutral+bad} <br />\n    average {((good*1)+(bad*-1))/(good+neutral+bad)} <br />\n    positive {good/((good+neutral+bad))}\n  </div>\n)\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const addGood = () => setGood(good+1)\n  const addNeutral = () => setNeutral(neutral+1)\n  const addBad = () => setBad(bad+1)\n  \n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={() => addGood()} text='good' />\n      <Button onClick={() => addNeutral()} text='neutral' />\n      <Button onClick={() => addBad()} text='bad' />\n      <h1>statistics</h1>\n      <Stats good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nReactDOM.render( <App />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}